// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Marketing.Migrations
{
    [DbContext(typeof(MyDbcontext))]
    [Migration("20210111190109_shoppingmigration")]
    partial class shoppingmigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ProductType", b =>
                {
                    b.Property<int>("typeid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("proytpe")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.HasKey("typeid");

                    b.ToTable("productTypes");
                });

            modelBuilder.Entity("Products", b =>
                {
                    b.Property<int>("pro_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("price")
                        .HasColumnType("decimal(18,2)")
                        .HasMaxLength(50);

                    b.Property<string>("prodesc")
                        .HasColumnType("nvarchar(700)")
                        .HasMaxLength(700);

                    b.Property<int?>("productTypetypeid")
                        .HasColumnType("int");

                    b.Property<string>("proimg")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("proname")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<int>("typeid")
                        .HasColumnType("int");

                    b.HasKey("pro_id");

                    b.HasIndex("productTypetypeid");

                    b.ToTable("products");
                });

            modelBuilder.Entity("Users", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("chkemail")
                        .HasColumnType("bit");

                    b.Property<string>("confirmpassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("username")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.HasKey("id");

                    b.ToTable("users");
                });

            modelBuilder.Entity("Products", b =>
                {
                    b.HasOne("ProductType", "productType")
                        .WithMany()
                        .HasForeignKey("productTypetypeid");
                });
#pragma warning restore 612, 618
        }
    }
}
